from typing import AnyStr, Iterable
import socket

class LoggerMixIn(object):
    def _log_debug(self, msg: AnyStr) -> None: ...
    def _log_error(self, msg: AnyStr) -> None: ...
    def _log(self, msg: AnyStr, level: int = ...) -> None: ...


class TCPClient(LoggerMixIn):
    def __init__(self, host: AnyStr, port: int) -> None: ...
    def connect(self) -> None: ...
    def disconnect(self) -> None: ...
    def reconnect(self) -> None: ...
    def reset_connection_tries(self) -> None: ...
    def _send_with_lock(self, data_bytes: bytes) -> None: ...
    def _connection(self) -> socket.socket: ...


class DataSeries(object):
    def __init__(self, data: Iterable[float]) -> None: ...
    def count(self) -> int: ...
    def min(self) -> float: ...
    def max(self) -> float: ...
    def mean(self) -> float: ...
    def median(self) -> float: ...